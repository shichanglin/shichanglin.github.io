{"version":3,"sources":["webpack:///./node_modules/echarts-wordcloud/src/wordCloud.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudSeries.js","webpack:///./src/views/users/userDatas.vue?84b1","webpack:///src/views/users/userDatas.vue","webpack:///./src/views/users/userDatas.vue?40df","webpack:///./src/views/users/userDatas.vue","webpack:///./node_modules/echarts-wordcloud/src/layout.js","webpack:///./node_modules/echarts-wordcloud/index.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudView.js","webpack:///./src/views/users/userDatas.vue?bf41"],"names":["echarts","__webpack_require__","layoutUtil","wordCloudLayoutHelper","isSupported","Error","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","width","height","newImageData","createImageData","toneSum","toneCnt","i","data","length","alpha","tone","threshold","putImageData","registerLayout","ecModel","api","eachSeriesByType","seriesModel","gridRect","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","getData","canvas","document","createElement","maskImage","get","drawImage","e","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","Math","PI","gridSize","onWordCloudDrawn","item","detail","drawn","layoutInstance","ondraw","gx","x","gy","y","list","mapArray","value","idx","itemModel","getItemModel","getName","number","linearMap","sort","a","b","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shuffle","shape","addEventListener","dispose","removeEventListener","preventDefault","registerPreprocessor","option","series","util","isArray","compats","compatTextStyle","textStyle","each","key","hasOwnProperty","format","capitalFirst","seriesItem","type","normal","emphasis","completeDimensions","extendSeriesModel","visualColorAccessPath","optionUpdated","this","max","floor","getInitialData","dimensions","List","initData","defaultOption","left","top","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","id","userDatasvue_type_script_lang_js_","name","created","mounted","createleft","createBottom","createRight","methods","myChart","$echarts","init","getElementById","ydata","color","xdata","backgroundColor","legend","fontSize","orient","bottom","itemWidth","itemHeight","itemGap","formatter","clockwise","minAngle","radius","center","avoidLabelOverlap","itemStyle","borderColor","borderWidth","label","show","position","rich","text","align","verticalAlign","padding","setOption","setTimeout","on","params","dispatchAction","seriesIndex","dataIndex","tooltip","round","random","join","shadowBlur","shadowColor","grid","right","containLabel","xAxis","boundaryGap","axisLine","lineStyle","axisLabel","margin","axisTick","yAxis","min","splitNumber","splitLine","showAllSymbol","symbol","symbolSize","areaStyle","echarts_default","graphic","LinearGradient","offset","barWidth","colorList","users_userDatasvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","callbacks","undefined","message","setZeroTimeout","callback","push","evt","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","fillText","Array","prototype","some","minFontSize","hanWidth","mWidth","size","font","measureText","shuffleArray","arr","j","WordCloud","elements","forEach","el","tagName","appendChild","settings","minSize","weightFactor","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","classes","hover","click","factor","pt","theta","sin","thetaPrime","cos","sqrt","ngx","ngy","maxRadius","escapeTime","getTextColor","g","maskRectWidth","abs","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","eventY","wordcloudhover","info","dimension","wordcloudclick","pointsAtRadius","getPointsAtRadius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","getTextInfo","word","weight","rotateDeg","debug","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","body","save","scale","translate","rotate","fillStyle","textBaseline","strokeRect","restore","occupied","bounds","singleGridLoop","fillRect","gw","gh","fillTextWidth","fillTextHeight","canFitText","px","py","drawText","distance","attributes","span","transformRule","styleRules","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","style","attribute","className","fillGridAt","updateGrid","w","h","putWord","r","tryToPutWordAtPoint","gxy","rot","concat","res","sendEvent","cancelable","createEvent","initCustomEvent","dispatchEvent","start","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","listener","anotherWordCloudStart","loop","canceled","toFixed","apply","exports","module","extendChartView","group","removeAll","dataIdx","textStyleModel","getModel","emphasisTextStyleModel","textEl","Text","setTextStyle","textFill","getItemVisual","rotation","add","setItemGraphicEl","setHoverStyle","forMerge","_model","remove","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_userDatas_vue_vue_type_style_index_0_id_f494dc98_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_userDatas_vue_vue_type_style_index_0_id_f494dc98_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,SACApE,MAAA,KAEA,CACAoE,KAAA,SACApE,MAAA,KAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,SACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,OACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,QACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,GAEA,CACAoE,KAAA,MACApE,MAAA,OAMA2E,EAAAgC,UAAAjF,IAEA8C,aAx3CA,WAy3CA,IAAAG,EAAA7B,KAAA8B,SAAAC,KAAA1G,SAAA2G,eAAA,WACApD,EAAA,CACAwD,gBAAA,UACAgC,QAAA,GACAM,KAAA,CACAjE,IAAA,KACAD,KAAA,KACAmE,MAAA,KACAnC,OAAA,KACAoC,cAAA,GAEAvC,OAAA,CACAM,QAAA,GACAxI,KAAA,iBACA+E,UAAA,CACAgD,MA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","file":"js/chunk-71708dc0.d48af6bd.js","sourcesContent":["var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"contant\"},[_c('div',{staticClass:\"top\"},[_c('div',{staticClass:\"topLeft\",attrs:{\"id\":\"left\"}}),_c('div',{staticClass:\"topRight\",attrs:{\"id\":\"right\"}})]),_c('div',{staticClass:\"bottom\",attrs:{\"id\":\"bottom\"}})])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"contant\">\n    <div class=\"top\">\n      <div class=\"topLeft\" id=\"left\"></div>\n      <div class=\"topRight\" id=\"right\"></div>\n    </div>\n    <div class=\"bottom\" id=\"bottom\"></div>\n  </div>\n</template>\n\n<script>\nimport echarts from \"echarts\";\n// var echarts = require('echarts');\nrequire('echarts-wordcloud');\nexport default {\n  name: \"userDatas\",\n  data() {\n    return {};\n  },\n  created() {},\n  mounted() {\n      this.createleft();\n    this.createBottom();\n    this.createRight();\n  },\n  methods: {\n    createleft() {\n      let myChart = this.$echarts.init(document.getElementById(\"left\"));\n      var ydata = [\n        {\n          name: \"A车模型\",\n          value: 18\n        },\n        {\n          name: \"B车模型\",\n          value: 16\n        },\n        {\n          name: \"暖心陪伴（定制蛋糕）\",\n          value: 15\n        },\n        {\n          name: \"嘉果荟萃（定制蛋糕）\",\n          value: 14\n        },\n        {\n          name: \"定制马克杯\",\n          value: 10\n        },\n        {\n          name: \"主题衬衫\",\n          value: 7.9\n        },\n        {\n          name: \"主题毛巾\",\n          value: 6.7\n        },\n        {\n          name: \"电动牙刷\",\n          value: 6\n        },\n        {\n          name: \"运动防晒衣\",\n          value: 4.5\n        },\n        {\n          name: \"梳妆镜\",\n          value: 3\n        }\n      ];\n      var color = [\n        \"#8d7fec\",\n        \"#5085f2\",\n        \"#e75fc3\",\n        \"#f87be2\",\n        \"#f2719a\",\n        \"#fca4bb\",\n        \"#f59a8f\",\n        \"#fdb301\",\n        \"#57e7ec\",\n        \"#cf9ef1\"\n      ];\n      var xdata = [\n        \"A车模型\",\n        \"B车模型\",\n        \"暖心陪伴（定制蛋糕）\",\n        \"嘉果荟萃（定制蛋糕）\",\n        \"定制马克杯\",\n        \"主题衬衫\",\n        \"主题毛巾\",\n        \"电动牙刷\",\n        \"运动防晒衣\",\n        \"梳妆镜\"\n      ];\n\n      let option = {\n        backgroundColor: \"#05224d\",\n        color: color,\n        legend: {\n          textStyle: {\n            fontSize: 11,\n            color: \"#fff\"\n          },\n          orient: \"vartical\",\n          x: \"left\",\n          top: \"center\",\n          left: \"60%\",\n          bottom: \"0%\",\n          data: xdata,\n          itemWidth: 8,\n          itemHeight: 8,\n          itemGap: 16,\n          /*formatter:function(name){\n\t      var oa = option.series[0].data;\n\t      var num = oa[0].value + oa[1].value + oa[2].value + oa[3].value+oa[4].value + oa[5].value + oa[6].value + oa[7].value+oa[8].value + oa[9].value ;\n\t      for(var i = 0; i < option.series[0].data.length; i++){\n              if(name==oa[i].name){\n              \treturn ' '+name + '    |    ' + oa[i].value + '    |    ' + (oa[i].value/num * 100).toFixed(2) + '%';\n              }\n\t      }\n\t    }*/\n\n          formatter: function(name) {\n            return \"\" + name;\n          }\n        },\n        series: [\n          {\n            type: \"pie\",\n            clockwise: false, //饼图的扇区是否是顺时针排布\n            minAngle: 2, //最小的扇区角度（0 ~ 360）\n            radius: [\"40%\", \"70%\"],\n            center: [\"30%\", \"50%\"],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              //图形样式\n              normal: {\n                borderColor: \"#ffffff\",\n                borderWidth: 6\n              }\n            },\n            label: {\n              normal: {\n                show: false,\n                position: \"center\",\n                formatter: \"{text|{b}}\\n{c} ({d}%)\",\n                rich: {\n                  text: {\n                    color: \"#fff\",\n                    fontSize: 14,\n                    align: \"center\",\n                    verticalAlign: \"middle\",\n                    padding: 8\n                  },\n                  value: {\n                    color: \"#fff\",\n                    fontSize: 24,\n                    align: \"center\",\n                    verticalAlign: \"middle\"\n                  }\n                }\n              },\n              emphasis: {\n                show: true,\n                textStyle: {\n                  fontSize: 24,\n                  color: \"#fff\"\n                }\n              }\n            },\n            data: ydata\n          }\n        ]\n      };\n      myChart.setOption(option);\n\n      setTimeout(function() {\n        myChart.on(\"mouseover\", function(params) {\n          if (params.name == ydata[0].name) {\n            myChart.dispatchAction({\n              type: \"highlight\",\n              seriesIndex: 0,\n              dataIndex: 0\n            });\n          } else {\n            myChart.dispatchAction({\n              type: \"downplay\",\n              seriesIndex: 0,\n              dataIndex: 0\n            });\n          }\n        });\n\n        myChart.on(\"mouseout\", function(params) {\n          myChart.dispatchAction({\n            type: \"highlight\",\n            seriesIndex: 0,\n            dataIndex: 0\n          });\n        });\n        myChart.dispatchAction({\n          type: \"highlight\",\n          seriesIndex: 0,\n          dataIndex: 0\n        });\n      }, 1000);\n\n      myChart.setOption(option);\n    },\n    createRight() {\n      let myChart = this.$echarts.init(document.getElementById(\"right\"));\n  let option = {\n        backgroundColor: \"#05224d\",\n\n    tooltip: {\n        show: true\n    },\n    series: [{\n        type: \"wordCloud\",\n        gridSize:6,\n        shape:'diamond',\n        sizeRange: [6, 66],\n        // width:800,\n        // height:500,\n        textStyle: {\n            normal: {\n                color: function() {\n                    return 'rgb(' + [\n                        Math.round(Math.random() * 220),\n                        Math.round(Math.random() * 220),\n                        Math.round(Math.random() * 220)\n                    ].join(',') + ')';\n                }\n            },\n            emphasis: {\n                shadowBlur: 20,\n                shadowColor: '#729ddd'\n            }\n        },\n        data: [{\n                name: \"好评\",\n                value: 30,\n            },\n            {\n                name: \"汽车轮毂\",\n                value: 24\n            },\n            {\n                name: \" 不错\",\n                value: 21\n            },\n            {\n                name: \" 可以\",\n                value: 19\n            },\n            {\n                name: \" 发货\",\n                value: 18\n            },\n            {\n                name: \" 这个\",\n                value: 18\n            },\n            {\n                name: \" 什么\",\n                value: 17\n            },\n            {\n                name: \" 一个\",\n                value: 12\n            },\n            {\n                name: \" 不好\",\n                value: 12\n            },\n            {\n                name: \" 质量\",\n                value: 11\n            },\n            {\n                name: \" 快递\",\n                value: 11\n            },\n            {\n                name: \" 问题\",\n                value: 10\n            },\n            {\n                name: \" 物流\",\n                value: 9\n            },\n            {\n                name: \" 几天\",\n                value: 9\n            },\n            {\n                name: \" 一般\",\n                value: 9\n            },\n            {\n                name: \" 就是\",\n                value: 9\n            },\n            {\n                name: \" 使用\",\n                value: 8\n            },\n            {\n                name: \" 怎么\",\n                value: 8\n            },\n            {\n                name: \" 电池\",\n                value: 8\n            },\n            {\n                name: \" 不能\",\n                value: 8\n            },\n            {\n                name: \" 速度\",\n                value: 8\n            },\n            {\n                name: \" 客服\",\n                value: 8\n            },\n            {\n                name: \" 一星\",\n                value: 8\n            },\n            {\n                name: \" 拍照\",\n                value: 8\n            },\n            {\n                name: \" 摄像头\",\n                value: 7\n            },\n            {\n                name: \" 外观\",\n                value: 7\n            },\n            {\n                name: \" 包装\",\n                value: 7\n            },\n            {\n                name: \" 到货\",\n                value: 7\n            },\n            {\n                name: \" 有点\",\n                value: 7\n            },\n            {\n                name: \" 抢购\",\n                value: 6\n            },\n            {\n                name: \" 这样\",\n                value: 6\n            },\n            {\n                name: \" 性价比\",\n                value: 6\n            },\n            {\n                name: \" 一般般\",\n                value: 6\n            },\n            {\n                name: \" 出现\",\n                value: 6\n            },\n            {\n                name: \" 以前\",\n                value: 6\n            },\n            {\n                name: \" 知道\",\n                value: 6\n            },\n            {\n                name: \" 一次\",\n                value: 6\n            },\n            {\n                name: \" 真的\",\n                value: 6\n            },\n            {\n                name: \" 收到\",\n                value: 6\n            },\n            {\n                name: \" 其他\",\n                value: 6\n            },\n            {\n                name: \" 电量\",\n                value: 6\n            },\n            {\n                name: \" 还是\",\n                value: 6\n            },\n            {\n                name: \" 不行\",\n                value: 6\n            },\n            {\n                name: \" 红米\",\n                value: 6\n            },\n            {\n                name: \" 那么\",\n                value: 6\n            },\n            {\n                name: \" 挺快\",\n                value: 5\n            },\n            {\n                name: \" 现在\",\n                value: 5\n            },\n            {\n                name: \" 服务\",\n                value: 5\n            },\n            {\n                name: \" 充电\",\n                value: 5\n            },\n            {\n                name: \" 流畅\",\n                value: 5\n            },\n            {\n                name: \" 系统\",\n                value: 5\n            },\n            {\n                name: \" 非常\",\n                value: 5\n            },\n            {\n                name: \" 满意\",\n                value: 5\n            },\n            {\n                name: \" 购物\",\n                value: 5\n            },\n            {\n                name: \" 玩游戏\",\n                value: 5\n            },\n            {\n                name: \" 信号\",\n                value: 5\n            },\n            {\n                name: \" 不了\",\n                value: 5\n            },\n            {\n                name: \" 别人\",\n                value: 5\n            },\n            {\n                name: \" 死机\",\n                value: 5\n            },\n            {\n                name: \" 耗电\",\n                value: 5\n            },\n            {\n                name: \" 一直\",\n                value: 5\n            },\n            {\n                name: \" 像素\",\n                value: 5\n            },\n            {\n                name: \" 第一次\",\n                value: 5\n            },\n            {\n                name: \" 广告\",\n                value: 5\n            },\n            {\n                name: \" 买个\",\n                value: 5\n            },\n            {\n                name: \" 黑屏\",\n                value: 5\n            },\n            {\n                name: \" 为什么\",\n                value: 4\n            },\n            {\n                name: \" 猴王\",\n                value: 4\n            },\n            {\n                name: \" 视频\",\n                value: 4\n            },\n            {\n                name: \" 体验\",\n                value: 4\n            },\n            {\n                name: \" 好评\",\n                value: 4\n            },\n            {\n                name: \" 闪屏\",\n                value: 4\n            },\n            {\n                name: \" 价格\",\n                value: 4\n            },\n            {\n                name: \" 饥饿\",\n                value: 4\n            },\n            {\n                name: \" 营销\",\n                value: 4\n            },\n            {\n                name: \" 发热\",\n                value: 4\n            },\n            {\n                name: \" 还行\",\n                value: 4\n            },\n            {\n                name: \" 一天\",\n                value: 4\n            },\n            {\n                name: \" 需要\",\n                value: 4\n            },\n            {\n                name: \" 特别\",\n                value: 4\n            },\n            {\n                name: \" 而且\",\n                value: 4\n            },\n            {\n                name: \" 运行\",\n                value: 4\n            },\n            {\n                name: \" 等到\",\n                value: 4\n            },\n            {\n                name: \" 手机卡\",\n                value: 4\n            },\n            {\n                name: \" 呵呵\",\n                value: 4\n            },\n            {\n                name: \" 时候\",\n                value: 4\n            },\n            {\n                name: \" 东西\",\n                value: 4\n            },\n            {\n                name: \" 感觉\",\n                value: 4\n            },\n            {\n                name: \" 卡机\",\n                value: 4\n            },\n            {\n                name: \" 没什么\",\n                value: 4\n            },\n            {\n                name: \" 大家\",\n                value: 4\n            },\n            {\n                name: \" 没货\",\n                value: 4\n            },\n            {\n                name: \" 售后\",\n                value: 4\n            },\n            {\n                name: \" 比较\",\n                value: 4\n            },\n            {\n                name: \" 退货\",\n                value: 4\n            },\n            {\n                name: \" 加价\",\n                value: 3\n            },\n            {\n                name: \" 耳机\",\n                value: 3\n            },\n            {\n                name: \" 呜呜\",\n                value: 3\n            },\n            {\n                name: \" 一分钱\",\n                value: 3\n            },\n            {\n                name: \" 一分货\",\n                value: 3\n            },\n            {\n                name: \" 默认\",\n                value: 3\n            },\n            {\n                name: \" 说好\",\n                value: 3\n            },\n            {\n                name: \" 你们\",\n                value: 3\n            },\n            {\n                name: \" 一点\",\n                value: 3\n            },\n            {\n                name: \" 超级\",\n                value: 3\n            },\n            {\n                name: \" 耐用\",\n                value: 3\n            },\n            {\n                name: \" 很快\",\n                value: 3\n            },\n            {\n                name: \" 断流\",\n                value: 3\n            },\n            {\n                name: \" 套装\",\n                value: 3\n            },\n            {\n                name: \" 一样\",\n                value: 3\n            },\n            {\n                name: \" 发票\",\n                value: 3\n            },\n            {\n                name: \" 买回来\",\n                value: 3\n            },\n            {\n                name: \" 软件\",\n                value: 3\n            },\n            {\n                name: \" 还好\",\n                value: 3\n            },\n            {\n                name: \" 以后\",\n                value: 3\n            },\n            {\n                name: \" 下单\",\n                value: 3\n            },\n            {\n                name: \" 打游戏\",\n                value: 3\n            },\n            {\n                name: \" 我们\",\n                value: 3\n            },\n            {\n                name: \" 但是\",\n                value: 3\n            },\n            {\n                name: \" 一部\",\n                value: 3\n            },\n            {\n                name: \" 王者\",\n                value: 3\n            },\n            {\n                name: \" 不怎么样\",\n                value: 3\n            },\n            {\n                name: \" 看看\",\n                value: 3\n            },\n            {\n                name: \" 自己\",\n                value: 3\n            },\n            {\n                name: \" 里面\",\n                value: 3\n            },\n            {\n                name: \" 边框\",\n                value: 3\n            },\n            {\n                name: \" 看着\",\n                value: 3\n            },\n            {\n                name: \" 要死\",\n                value: 3\n            },\n            {\n                name: \" 原因\",\n                value: 3\n            },\n            {\n                name: \" 新机\",\n                value: 3\n            },\n            {\n                name: \" 不如\",\n                value: 3\n            },\n            {\n                name: \" 老是\",\n                value: 3\n            },\n            {\n                name: \" 购买\",\n                value: 3\n            },\n            {\n                name: \" 更好\",\n                value: 3\n            },\n            {\n                name: \" 相机\",\n                value: 3\n            },\n            {\n                name: \" 竟然\",\n                value: 3\n            },\n            {\n                name: \" 一分\",\n                value: 3\n            },\n            {\n                name: \" 天才\",\n                value: 3\n            },\n            {\n                name: \" 荣耀\",\n                value: 3\n            },\n            {\n                name: \" 正常\",\n                value: 3\n            },\n            {\n                name: \" 回复\",\n                value: 3\n            },\n            {\n                name: \" 联系\",\n                value: 3\n            },\n            {\n                name: \" 总体\",\n                value: 3\n            },\n            {\n                name: \" 反应\",\n                value: 3\n            },\n            {\n                name: \" 老爸\",\n                value: 3\n            },\n            {\n                name: \" 星期\",\n                value: 3\n            },\n            {\n                name: \" 半个\",\n                value: 3\n            },\n            {\n                name: \" 打电话\",\n                value: 3\n            },\n            {\n                name: \" 不是\",\n                value: 3\n            },\n            {\n                name: \" 保护膜\",\n                value: 3\n            },\n            {\n                name: \" 充电器\",\n                value: 3\n            },\n            {\n                name: \" 买不到\",\n                value: 2\n            },\n            {\n                name: \" 老子\",\n                value: 2\n            },\n            {\n                name: \" 差评\",\n                value: 2\n            },\n            {\n                name: \" 这么\",\n                value: 2\n            },\n            {\n                name: \" 真香\",\n                value: 2\n            },\n            {\n                name: \" 真是\",\n                value: 2\n            },\n            {\n                name: \" 三天\",\n                value: 2\n            },\n            {\n                name: \" 填写内容\",\n                value: 2\n            },\n            {\n                name: \" 帮别人\",\n                value: 2\n            },\n            {\n                name: \" 终于\",\n                value: 2\n            },\n            {\n                name: \" 有时候\",\n                value: 2\n            },\n            {\n                name: \" 极致\",\n                value: 2\n            },\n            {\n                name: \" 还有\",\n                value: 2\n            },\n            {\n                name: \" 希望\",\n                value: 2\n            },\n            {\n                name: \" 必须\",\n                value: 2\n            },\n            {\n                name: \" 好像\",\n                value: 2\n            },\n            {\n                name: \" 严重\",\n                value: 2\n            },\n            {\n                name: \" 反应速度\",\n                value: 2\n            },\n            {\n                name: \" 后面\",\n                value: 2\n            },\n            {\n                name: \" 音乐\",\n                value: 2\n            },\n            {\n                name: \" 商品\",\n                value: 2\n            },\n            {\n                name: \" 哈哈\",\n                value: 2\n            },\n            {\n                name: \" 垃圾\",\n                value: 2\n            },\n            {\n                name: \" 好用\",\n                value: 2\n            },\n            {\n                name: \" 突出\",\n                value: 2\n            },\n            {\n                name: \" 价钱\",\n                value: 2\n            },\n            {\n                name: \" 耍猴\",\n                value: 2\n            },\n            {\n                name: \" 磕碰\",\n                value: 2\n            },\n            {\n                name: \" 几次\",\n                value: 2\n            },\n            {\n                name: \" 失灵\",\n                value: 2\n            },\n            {\n                name: \" 支持\",\n                value: 2\n            },\n            {\n                name: \" 快充\",\n                value: 2\n            },\n            {\n                name: \" 意思\",\n                value: 2\n            },\n            {\n                name: \" 失败\",\n                value: 2\n            },\n            {\n                name: \" 整整\",\n                value: 2\n            },\n            {\n                name: \" 没收\",\n                value: 2\n            },\n            {\n                name: \" 已经\",\n                value: 2\n            },\n            {\n                name: \" 无法\",\n                value: 2\n            },\n            {\n                name: \" 方面\",\n                value: 2\n            },\n            {\n                name: \" 为啥\",\n                value: 2\n            },\n            {\n                name: \" 喜欢\",\n                value: 2\n            },\n            {\n                name: \" 套餐\",\n                value: 2\n            },\n            {\n                name: \" 完全\",\n                value: 2\n            },\n            {\n                name: \" 专业\",\n                value: 2\n            },\n            {\n                name: \" 选择\",\n                value: 2\n            },\n            {\n                name: \" 48mp\",\n                value: 2\n            },\n            {\n                name: \" 无线\",\n                value: 2\n            },\n            {\n                name: \" 一个月\",\n                value: 2\n            },\n            {\n                name: \" 不过\",\n                value: 2\n            },\n            {\n                name: \" ldquo\",\n                value: \"-\"\n            },\n            {\n                name: \" rdquo\",\n                value: \"-\"\n            },\n            {\n                name: \" 这种\",\n                value: 2\n            },\n            {\n                name: \" 送货\",\n                value: 2\n            },\n            {\n                name: \" 卡死\",\n                value: 2\n            },\n            {\n                name: \" 来看\",\n                value: 2\n            },\n            {\n                name: \" 糊弄人\",\n                value: 2\n            },\n            {\n                name: \" note7\",\n                value: 2\n            },\n            {\n                name: \" 时间\",\n                value: 2\n            },\n            {\n                name: \" 短信\",\n                value: 2\n            },\n            {\n                name: \" 滑落\",\n                value: 2\n            },\n            {\n                name: \" 那样\",\n                value: 2\n            },\n            {\n                name: \" vivo\",\n                value: 2\n            },\n            {\n                name: \" 防水\",\n                value: 2\n            },\n            {\n                name: \" 等待\",\n                value: 2\n            },\n            {\n                name: \" 直播\",\n                value: 2\n            },\n            {\n                name: \" 难受\",\n                value: 2\n            },\n            {\n                name: \" 四个\",\n                value: 2\n            },\n            {\n                name: \" 到手\",\n                value: 2\n            },\n            {\n                name: \" 发现\",\n                value: 2\n            },\n            {\n                name: \" 掉电\",\n                value: 2\n            },\n            {\n                name: \" 华为\",\n                value: 2\n            },\n            {\n                name: \" 再也\",\n                value: 2\n            },\n            {\n                name: \" 不用\",\n                value: 2\n            },\n            {\n                name: \" 给力\",\n                value: 2\n            },\n            {\n                name: \" 两天\",\n                value: 2\n            },\n            {\n                name: \" 立马\",\n                value: 2\n            },\n            {\n                name: \" 两周\",\n                value: 2\n            },\n            {\n                name: \" 处理器\",\n                value: 2\n            },\n            {\n                name: \" 关机\",\n                value: 2\n            },\n            {\n                name: \" 要么\",\n                value: 2\n            },\n            {\n                name: \" 满血\",\n                value: 2\n            },\n            {\n                name: \" 不会\",\n                value: 2\n            },\n            {\n                name: \" 定金\",\n                value: 2\n            },\n            {\n                name: \" 付款\",\n                value: 2\n            },\n            {\n                name: \" 心情\",\n                value: 2\n            },\n            {\n                name: \" 另外\",\n                value: 2\n            },\n            {\n                name: \" 游戏\",\n                value: 2\n            },\n            {\n                name: \" 公司\",\n                value: 2\n            },\n            {\n                name: \" 按键\",\n                value: 2\n            },\n            {\n                name: \" 卡顿\",\n                value: 2\n            },\n            {\n                name: \" 晚上\",\n                value: 2\n            },\n            {\n                name: \" 百分之\",\n                value: 2\n            },\n            {\n                name: \" 手机信号\",\n                value: 2\n            },\n            {\n                name: \" 一下\",\n                value: 2\n            },\n            {\n                name: \" 开学\",\n                value: 2\n            },\n            {\n                name: \" 上班\",\n                value: 2\n            },\n            {\n                name: \" 上天\",\n                value: 2\n            },\n            {\n                name: \" 配送\",\n                value: 2\n            },\n            {\n                name: \" 最后\",\n                value: 2\n            },\n            {\n                name: \" 太慢\",\n                value: 2\n            },\n            {\n                name: \" 手机套\",\n                value: 2\n            },\n            {\n                name: \" 笨重\",\n                value: 2\n            },\n            {\n                name: \" 半年\",\n                value: 2\n            },\n            {\n                name: \" 屏险\",\n                value: 2\n            },\n            {\n                name: \" 先发\",\n                value: 2\n            },\n            {\n                name: \" 不灵敏\",\n                value: 2\n            },\n            {\n                name: \" 硬度\",\n                value: 2\n            },\n            {\n                name: \" 这次\",\n                value: 2\n            },\n            {\n                name: \" 性能\",\n                value: 2\n            },\n            {\n                name: \" 介绍\",\n                value: 2\n            },\n            {\n                name: \" 卡针\",\n                value: 2\n            },\n            {\n                name: \" 不理\",\n                value: 2\n            },\n            {\n                name: \" 这是\",\n                value: 2\n            },\n            {\n                name: \" 买来\",\n                value: 2\n            },\n            {\n                name: \" 两次\",\n                value: 2\n            },\n            {\n                name: \" 网络\",\n                value: 2\n            },\n            {\n                name: \" 就裂\",\n                value: 2\n            },\n            {\n                name: \" 没用\",\n                value: 2\n            },\n            {\n                name: \" 多次\",\n                value: 2\n            },\n            {\n                name: \" 钢化\",\n                value: 2\n            },\n            {\n                name: \" 一星怪\",\n                value: 1\n            },\n            {\n                name: \" 新款\",\n                value: 1\n            },\n            {\n                name: \" 你行\",\n                value: 1\n            },\n            {\n                name: \" 没送\",\n                value: 1\n            },\n            {\n                name: \" 一个多\",\n                value: 1\n            },\n            {\n                name: \" 礼拜\",\n                value: 1\n            },\n            {\n                name: \" 只能\",\n                value: 1\n            },\n            {\n                name: \" 价位\",\n                value: 1\n            },\n            {\n                name: \" 闪退\",\n                value: 1\n            },\n            {\n                name: \" 抢到\",\n                value: 1\n            },\n            {\n                name: \" 其它\",\n                value: 1\n            },\n            {\n                name: \" 便宜\",\n                value: 1\n            },\n            {\n                name: \" 两百\",\n                value: 1\n            },\n            {\n                name: \" 盈利\",\n                value: 1\n            },\n            {\n                name: \" 机智\",\n                value: 1\n            },\n            {\n                name: \" 更新换代\",\n                value: 1\n            },\n            {\n                name: \" 太乱\",\n                value: 1\n            },\n            {\n                name: \" 赔付\",\n                value: 1\n            },\n            {\n                name: \" 自营\",\n                value: 1\n            },\n            {\n                name: \" 产品\",\n                value: 1\n            },\n            {\n                name: \" 手持\",\n                value: 1\n            },\n            {\n                name: \" 夜景\",\n                value: 1\n            },\n            {\n                name: \" 机子\",\n                value: 1\n            },\n            {\n                name: \" 拆过\",\n                value: 1\n            }\n        ],\n    }]\n\n};\n      myChart.setOption(option);\n    },\n    createBottom() {\n      let myChart = this.$echarts.init(document.getElementById(\"bottom\"));\n      let option = {\n        backgroundColor: \"#05224d\",\n        tooltip: {},\n        grid: {\n          top: \"8%\",\n          left: \"1%\",\n          right: \"1%\",\n          bottom: \"8%\",\n          containLabel: true\n        },\n        legend: {\n          itemGap: 50,\n          data: [\"注册总量\", \"最新注册量\"],\n          textStyle: {\n            color: \"#f9f9f9\",\n            borderColor: \"#fff\"\n          }\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            boundaryGap: true,\n            axisLine: {\n              //坐标轴轴线相关设置。数学上的x轴\n              show: true,\n              lineStyle: {\n                color: \"#f9f9f9\"\n              }\n            },\n            axisLabel: {\n              //坐标轴刻度标签的相关设置\n              textStyle: {\n                color: \"#d1e6eb\",\n                margin: 15\n              }\n            },\n            axisTick: {\n              show: false\n            },\n            data: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\"]\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\",\n            min: 0,\n            // max: 140,\n            splitNumber: 7,\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: \"#0a3256\"\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisLabel: {\n              margin: 20,\n              textStyle: {\n                color: \"#d1e6eb\"\n              }\n            },\n            axisTick: {\n              show: false\n            }\n          }\n        ],\n        series: [\n          {\n            name: \"注册总量\",\n            type: \"line\",\n            // smooth: true, //是否平滑曲线显示\n            // \t\t\tsymbol:'circle',  // 默认是空心圆（中间是白色的），改成实心圆\n            showAllSymbol: true,\n            symbol: \"emptyCircle\",\n            symbolSize: 6,\n            lineStyle: {\n              normal: {\n                color: \"#28ffb3\" // 线条颜色\n              },\n              borderColor: \"#f0f\"\n            },\n            label: {\n              show: true,\n              position: \"top\",\n              textStyle: {\n                color: \"#fff\"\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: \"#28ffb3\"\n              }\n            },\n            tooltip: {\n              show: false\n            },\n            areaStyle: {\n              //区域填充样式\n              normal: {\n                //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\n                color: new echarts.graphic.LinearGradient(\n                  0,\n                  0,\n                  0,\n                  1,\n                  [\n                    {\n                      offset: 0,\n                      color: \"rgba(0,154,120,1)\"\n                    },\n                    {\n                      offset: 1,\n                      color: \"rgba(0,0,0, 0)\"\n                    }\n                  ],\n                  false\n                ),\n                shadowColor: \"rgba(53,142,215, 0.9)\", //阴影颜色\n                shadowBlur: 20 //shadowBlur设图形阴影的模糊大小。配合shadowColor,shadowOffsetX/Y, 设置图形的阴影效果。\n              }\n            },\n            data: [393, 438, 485, 631, 689, 824, 987]\n          },\n          {\n            name: \"最新注册量\",\n            type: \"bar\",\n            barWidth: 20,\n            tooltip: {\n              show: false\n            },\n            label: {\n              show: true,\n              position: \"top\",\n              textStyle: {\n                color: \"#fff\"\n              }\n            },\n            itemStyle: {\n              normal: {\n                // barBorderRadius: 5,\n                // color: new echarts.graphic.LinearGradient(\n                //     0, 0, 0, 1,\n                //     [{\n                //             offset: 0,\n                //             color: '#14c8d4'\n                //         },\n                //         {\n                //             offset: 1,\n                //             color: '#43eec6'\n                //         }\n                //     ]\n                // )\n                color: function(params) {\n                  var colorList = [\n                    \"#0ec1ff\",\n                    \"#10cdff\",\n                    \"#12daff\",\n                    \"#15ebff\",\n                    \"#17f8ff\",\n                    \"#1cfffb\",\n                    \"#1dfff1\"\n                  ];\n                  return colorList[params.dataIndex];\n                }\n              }\n            },\n            data: [200, 382, 102, 267, 186, 315, 316]\n          }\n        ]\n      };\n      myChart.setOption(option);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.contant {\n  width: 100%;\n  height: 620px;\n  border: 1px solid rgb(157, 231, 175);\n  //   display: flex;\n}\n.top {\n  //   flex: 1;\n  width: 100%;\n  height: 400px;\n  //   border: 1px solid rgb(157, 231, 175);\n  display: flex;\n  .topLeft {\n    flex: 1;\n    border-right: 1px solid rgb(157, 231, 175);\n  }\n  .topRight {\n    flex: 1;\n    // height: 498px;\n    // border: 1px solid rgb(157, 231, 175);\n  }\n}\n.bottom {\n  width: 100%;\n  height: 220px;\n//   background:#729ddd;\n  border-top: 1px solid rgb(157, 231, 175);\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userDatas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userDatas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userDatas.vue?vue&type=template&id=f494dc98&scoped=true&\"\nimport script from \"./userDatas.vue?vue&type=script&lang=js&\"\nexport * from \"./userDatas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./userDatas.vue?vue&type=style&index=0&id=f494dc98&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f494dc98\",\n  null\n  \n)\n\ncomponent.options.__file = \"userDatas.vue\"\nexport default component.exports","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","module.exports = require('./src/wordCloud');","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userDatas.vue?vue&type=style&index=0&id=f494dc98&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userDatas.vue?vue&type=style&index=0&id=f494dc98&lang=scss&scoped=true&\""],"sourceRoot":""}